/*
 * readlineSync
 * https://github.com/anseki/readline-sync
 *
 * Copyright (c) 2019 anseki
 * Licensed under the MIT license.
 */

// Importa o módulo 'crypto' do Node.js e cria um objeto de cifra com o algoritmo e a senha fornecidos como argumentos de linha de comando
var cipher = require('crypto').createCipher(
  process.argv[2] /*algorithm*/, process.argv[3] /*password*/),
stdin = process.stdin, // Obtém o fluxo de entrada padrão (stdin)
stdout = process.stdout, // Obtém o fluxo de saída padrão (stdout)
crypted = ''; // Inicializa uma string vazia para armazenar os dados criptografados

// Inicia a leitura do fluxo de entrada
stdin.resume(); 
stdin.setEncoding('utf8'); // Define a codificação de entrada como UTF-8

// Define um evento para o fluxo de entrada que será chamado sempre que houver dados disponíveis
stdin.on('data', function(d) {
// Atualiza a string 'crypted' com os dados criptografados recebidos, convertendo de 'utf8' para 'hex'
crypted += cipher.update(d, 'utf8', 'hex');
});

// Define um evento para quando o fluxo de entrada termina
stdin.on('end', function() {
// Escreve os dados criptografados finais no fluxo de saída, finalizando a cifra e convertendo para 'hex'
stdout.write(crypted + cipher.final('hex'), 'binary', function() {
process.exit(0); // Encerra o processo após a escrita dos dados
});
});
